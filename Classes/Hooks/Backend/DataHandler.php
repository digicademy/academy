<?phpnamespace Digicademy\Academy\Hooks\Backend;/*************************************************************** *  Copyright notice * *  (c) 2017 Torsten Schrade <Torsten.Schrade@adwmainz.de> *  All rights reserved * *  This script is part of the TYPO3 project. The TYPO3 project is *  free software; you can redistribute it and/or modify *  it under the terms of the GNU General Public License as published by *  the Free Software Foundation; either version 2 of the License, or *  (at your option) any later version. * *  The GNU General Public License can be found at *  http://www.gnu.org/copyleft/gpl.html. * *  This script is distributed in the hope that it will be useful, *  but WITHOUT ANY WARRANTY; without even the implied warranty of *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the *  GNU General Public License for more details. * *  This copyright notice MUST APPEAR in all copies of the script! ***************************************************************//** * HOOK class for backend processing in TCEMAIN * * @author    Torsten Schrade <Torsten.Schrade@adwmainz.de> */class DataHandler{    /**     * Generates a persistent identifier (uuid) on new and save for this extension's tables     *     * @param $status     * @param $table     * @param $id     * @param $fieldArray     * @param $pObj     */    public function processDatamap_postProcessFieldArray($status, $table, $id, &$fieldArray, &$pObj)    {        // generate xml conformant uuids as persistent identifiers        if ($table == 'tx_academy_domain_model_projects' ||            $table == 'tx_academy_domain_model_units' ||            $table == 'tx_academy_domain_model_persons' ||            $table == 'tx_academy_domain_model_relations' ||            $table == 'tx_academy_domain_model_roles' ||            $table == 'tx_academy_domain_model_hcards' ||            $table == 'tx_academy_domain_model_media' ||            $table == 'sys_category'        ) {            $generate = false;            switch ($status) {                case 'new':                    $generate = true;                    break;                case 'update':                default:                    $record = \TYPO3\CMS\Backend\Utility\BackendUtility::getRecordRaw($table, 'uid = ' . (int)$id,                        'persistent_identifier');                    if (!$record['persistent_identifier']) {                        $generate = true;                    }            }            if ($generate == true) {                do {                    $uuid = $this->generateUUID();                } while (preg_match('/^[a-z]/', $uuid) !== 1);                $fieldArray['persistent_identifier'] = $uuid;            }        }    }    /**     * Generates a universally unique identifier (UUID) according to RFC 4122 v4.     * The algorithm used here, might not be completely random. Copied from the identity extension.     *     * @return string The universally unique id     * @author Unknown     */    private function generateUUID()    {        return sprintf('%04x%04x-%04x-%04x-%04x-%04x%04x%04x',            mt_rand(0, 0xffff),            mt_rand(0, 0xffff),            mt_rand(0, 0xffff),            mt_rand(0, 0x0fff) | 0x4000,            mt_rand(0, 0x3fff) | 0x8000,            mt_rand(0, 0xffff),            mt_rand(0, 0xffff),            mt_rand(0, 0xffff));    }}